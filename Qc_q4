# qc_q4.py
from __future__ import annotations
import argparse
from pathlib import Path
import pandas as pd
from qc_common import new_empty_workbook, append_about_sheet_last, write_qc_sheet, normalize_quarter_label, MONTHS_FULL

def months_in_df(df: pd.DataFrame) -> list:
    return [m for m in MONTHS_FULL if m in df.columns]

def main() -> int:
    ap = argparse.ArgumentParser(description="QC for Question 4")
    ap.add_argument("--stage", required=True)
    ap.add_argument("--out", required=True)
    ap.add_argument("--prior-stage", default=None)
    ap.add_argument("--year", type=int, default=None)
    args = ap.parse_args()

    stage = Path(args.stage)
    try:
        df = pd.read_excel(stage, sheet_name="Q4", engine="openpyxl")
    except Exception:
        print("[WARN] Q4 sheet not found.")
        return 0

    year = int(args.year if args.year is not None else df["year"].mode().iat[0])
    current_q = normalize_quarter_label(df["quarter"])
    df = df[df["year"]==year]

    prior_df = None
    if args.prior_stage:
        p = Path(args.prior_stage)
        try:
            prev = pd.read_excel(p, sheet_name="Q4", engine="openpyxl")
            prior_df = prev[prev["year"]==(year-1)]
        except Exception:
            pass

    wb = new_empty_workbook()
    write_qc_sheet(
        wb, "QC_Q4", df,
        include_job_function=False,
        months_to_show=months_in_df(df),
        current_q=current_q, year=year,
        prior_df=prior_df
    )
    append_about_sheet_last(wb, "RLMS â€“ QC (Q4)", year, current_q)
    Path(args.out).parent.mkdir(parents=True, exist_ok=True)
    wb.save(args.out)
    print(f"[DONE] {args.out}")
    return 0

if __name__ == "__main__":
    raise SystemExit(main())
