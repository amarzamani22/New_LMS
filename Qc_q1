# qc_q1.py
from __future__ import annotations
import argparse
from pathlib import Path
import pandas as pd
from qc_common import (
    new_empty_workbook, append_about_sheet_last, write_qc_sheet,
    normalize_quarter_label, MONTHS_FULL
)

def load(path: Path, sheet: str) -> pd.DataFrame:
    try: return pd.read_excel(path, sheet_name=sheet, engine="openpyxl")
    except Exception: return pd.DataFrame()

def months_in_df(df: pd.DataFrame) -> list:
    return [m for m in MONTHS_FULL if m in df.columns]

def main() -> int:
    ap = argparse.ArgumentParser(description="QC for Question 1")
    ap.add_argument("--stage", required=True)
    ap.add_argument("--out", required=True)
    ap.add_argument("--prior-stage", default=None)
    ap.add_argument("--year", type=int, default=None)
    args = ap.parse_args()

    stage = Path(args.stage)
    q1a = load(stage, "Q1A_Main")
    q1jf= load(stage, "Q1A_JobFunc_Q4")
    q1b = load(stage, "Q1B")

    if q1a.empty and q1jf.empty and q1b.empty:
        print("[WARN] No Q1 sheets in staging.")
        return 0

    # year + quarter
    years = pd.concat([d[["year"]] for d in [q1a,q1jf,q1b] if not d.empty], ignore_index=True)
    year = int(args.year if args.year is not None else years["year"].mode().iat[0])
    qseries = pd.concat([d["quarter"] for d in [q1a,q1jf,q1b] if not d.empty], ignore_index=True)
    current_q = normalize_quarter_label(qseries)

    # filter
    if not q1a.empty:  q1a  = q1a[q1a["year"]==year]
    if not q1jf.empty: q1jf = q1jf[q1jf["year"]==year]
    if not q1b.empty:  q1b  = q1b[q1b["year"]==year]

    # prior
    prior_a = prior_b = None
    if args.prior_stage:
        p = Path(args.prior_stage)
        pa = load(p, "Q1A_Main"); pb = load(p, "Q1B")
        if not pa.empty: prior_a = pa[pa["year"]==(year-1)]
        if not pb.empty: prior_b = pb[pb["year"]==(year-1)]

    wb = new_empty_workbook()

    # Q1A Main (monthly)
    if not q1a.empty:
        write_qc_sheet(
            wb, "QC_Q1A_Main", q1a,
            include_job_function=False,
            months_to_show=months_in_df(q1a),  # exact columns present (prevents header shift)
            current_q=current_q, year=year,
            prior_df=prior_a
        )

    # Q1A Job Function (value only; includes subquestion)
    if not q1jf.empty:
        write_qc_sheet(
            wb, "QC_Q1A_JobFunc_Q4", q1jf,
            include_job_function=True,
            months_to_show=[],                 # no month columns — value-only table
            current_q=current_q, year=year,
            prior_df=None
        )

    # Q1B (Jun/Dec only: show only months present in staging)
    if not q1b.empty:
        write_qc_sheet(
            wb, "QC_Q1B", q1b,
            include_job_function=False,
            months_to_show=months_in_df(q1b),  # typically ["Jun"] or ["Dec"]
            current_q=current_q, year=year,
            prior_df=prior_b
        )

    append_about_sheet_last(wb, "RLMS – QC (Q1)", year, current_q)
    Path(args.out).parent.mkdir(parents=True, exist_ok=True)
    wb.save(args.out)
    print(f"[DONE] {args.out}")
    return 0

if __name__ == "__main__":
    raise SystemExit(main())
