def extract_q4_from_file(path: Path) -> pd.DataFrame:
    try:
        wb = load_workbook(str(path), data_only=True, read_only=True)
    except Exception:
        return pd.DataFrame()

    ent, yr, q = read_cover_meta(wb)
    if not ent or not yr or not q:
        try: wb.close()
        except Exception: pass
        return pd.DataFrame()

    months = MONTHS_BY_Q.get(q, [])
    if len(months) != 3:
        try: wb.close()
        except Exception: pass
        return pd.DataFrame()

    ws = wb[pick_data_sheet(wb)]

    out_rows: List[Dict] = []
    mcols = ["C", "D", "E"]  # month 1/2/3 are always C/D/E

    # exact subquestion headers and their worker-category rows
    SUBHEADER_ROWS = [178, 186, 194, 202]
    for h in SUBHEADER_ROWS:
        sublabel = ws[f"A{h}"].value
        sublabel = "" if sublabel is None else str(sublabel).strip()
        if not sublabel:
            # if header cell is blank, skip this block safely
            continue

        # worker categories are A{h+1}..A{h+7}
        for r in range(h + 1, h + 8):
            worker = ws[f"A{r}"].value
            worker_str = "" if worker is None else str(worker).strip()
            if not worker_str:
                continue

            row = {
                "entity_name": ent,
                "year": yr,
                "quarter": q,
                "question": "Q4",
                "subquestion": sublabel,
                "worker_category": worker_str,
                months[0]: read_num(ws, f"{mcols[0]}{r}"),
                months[1]: read_num(ws, f"{mcols[1]}{r}"),
                months[2]: read_num(ws, f"{mcols[2]}{r}"),
            }
            out_rows.append(row)

    try: wb.close()
    except Exception: pass

    return pd.DataFrame(out_rows)
