# qc_q3.py
from __future__ import annotations
import argparse
from pathlib import Path
import pandas as pd

from qc_common import (
    QCArgs,
    new_empty_workbook,
    write_qc_sheet,
    append_about_sheet_last,
    normalize_quarter_label,
    MONTHS_FULL,
)

def _load(path: Path, sheet: str) -> pd.DataFrame:
    try:
        return pd.read_excel(path, sheet_name=sheet, engine="openpyxl")
    except Exception:
        return pd.DataFrame()

def _months_in_df(df: pd.DataFrame) -> list:
    # Q3 has one "main" table with monthly columns; show all months found (Jan..Dec order).
    return [m for m in MONTHS_FULL if m in df.columns]

def main() -> int:
    ap = argparse.ArgumentParser(description="QC for Question 3")
    ap.add_argument("--stage", required=True, help="staging workbook (.xlsx)")
    ap.add_argument("--out", required=True, help="output QC workbook (.xlsx)")
    ap.add_argument("--prior-stage", default=None, help="prior-year staging workbook (.xlsx) for YoY")
    ap.add_argument("--year", type=int, default=None)
    ap.add_argument("--mom-threshold", type=float, default=0.25)
    ap.add_argument("--qoq-threshold", type=float, default=0.25)
    ap.add_argument("--abs-cutoff", type=float, default=50)
    ap.add_argument("--yoy-threshold", type=float, default=0.25)
    args = ap.parse_args()

    stage = Path(args.stage)

    # ---- Load current ----
    q3 = _load(stage, "Q3")
    if q3.empty:
        print("[WARN] No Q3 sheet found in staging.")
        return 0

    # Q3 has no subquestion; make sure the column is not required anywhere.
    # The common writer already guards by creating empty 'subquestion' if missing.
    years = q3[["year"]].dropna()
    if years.empty:
        print("[WARN] Q3 has no 'year' values; abort.")
        return 0
    year = int(args.year if args.year is not None else years["year"].mode().iat[0])

    # Which quarter(s) exist in the current staging?
    current_q = normalize_quarter_label(q3["quarter"])

    # Filter to selected year
    q3 = q3[q3["year"] == year].copy()
    if q3.empty:
        print(f"[WARN] Q3 has no rows for year {year}.")
        return 0

    # ---- Load prior (YoY) — same sheet ----
    prior_q3 = None
    if args.prior_stage:
        p = Path(args.prior_stage)
        pq3 = _load(p, "Q3")
        if not pq3.empty:
            prior_q3 = pq3[pq3["year"] == (year - 1)].copy()

    # Months to show = whatever is present in this staging (up to detected quarter)
    months_to_show = _months_in_df(q3)
    if not months_to_show:
        print("[WARN] Q3 has no month columns; nothing to QC.")
        return 0

    wb = new_empty_workbook()

    # Build QC sheet for Q3 "main"
    write_qc_sheet(QCArgs(
        sheet_name="QC_Q3",
        df=q3,
        wb=wb,
        year=year,
        current_q=current_q,
        prior_df=prior_q3,
        months_to_show=months_to_show,
        include_job_function=False,      # Q3 has no job function
        yoy_quarters=None,               # auto (quarter sums from months)
        mom_pct_threshold=args.mom_threshold,
        qoq_pct_threshold=args.qoq_threshold,
        yoy_pct_threshold=args.yoy_threshold,
        abs_cutoff=args.abs_cutoff,
    ))

    append_about_sheet_last(
        wb,
        "RLMS – QC (Q3)",
        year,
        current_q,
        notes=f"⚠ Data up to {current_q} only (based on staging workbook).",
    )
    Path(args.out).parent.mkdir(parents=True, exist_ok=True)
    wb.save(args.out)
    print(f"[DONE] {args.out}")
    return 0

if __name__ == "__main__":
    raise SystemExit(main())
