# qc_q3.py
from __future__ import annotations
import argparse
from pathlib import Path
import pandas as pd
from qc_common import (
    QCArgs, write_qc_sheet, new_empty_workbook, append_about_sheet_last,
    MONTHS_FULL, normalize_quarter_label
)

def _load(path: Path, sheet: str) -> pd.DataFrame:
    try:
        return pd.read_excel(path, sheet_name=sheet, engine="openpyxl")
    except Exception:
        return pd.DataFrame()

def _months_in_df(df: pd.DataFrame) -> list:
    return [m for m in MONTHS_FULL if m in df.columns]

def main() -> int:
    ap = argparse.ArgumentParser(description="QC Template – Question 3 (Main only, no subquestion/jobfunc)")
    ap.add_argument("--stage", required=True, help="Q3 staging workbook")
    ap.add_argument("--out", required=True, help="Output QC workbook (.xlsx)")
    ap.add_argument("--prior-stage", default=None, help="Prior-year Q3 staging workbook (for YoY)")
    ap.add_argument("--year", type=int, default=None)

    # thresholds
    ap.add_argument("--mom-threshold", type=float, default=0.25)
    ap.add_argument("--qoq-threshold", type=float, default=0.25)
    ap.add_argument("--yoy-threshold", type=float, default=0.25)
    ap.add_argument("--abs-cutoff", type=float, default=50.0)
    args = ap.parse_args()

    stage = Path(args.stage)
    q3 = _load(stage, "Q3")
    if q3.empty:
        print("[WARN] No Q3 sheet found in staging.")
        return 0

    # choose year + quarter
    year = int(args.year if args.year is not None else q3["year"].mode().iat[0])
    current_q = normalize_quarter_label(q3["quarter"])

    q3 = q3[q3["year"]==year]

    # prior
    prior = None
    if args.prior_stage:
        p = _load(Path(args.prior_stage), "Q3")
        if not p.empty:
            prior = p[p["year"]==(year-1)]

    months = _months_in_df(q3)

    wb = new_empty_workbook()
    # Note: Q3 has no subquestion; write_qc_sheet will handle blank 'subquestion' gracefully.
    write_qc_sheet(QCArgs(
        sheet_name="QC_Q3",
        df=q3, wb=wb, year=year, current_q=current_q, prior_df=prior,
        months_to_show=months, include_job_function=False,
        mom_pct_threshold=args.mom_threshold, qoq_pct_threshold=args.qoq_threshold,
        yoy_pct_threshold=args.yoy_threshold, abs_cutoff=args.abs_cutoff
    ))

    append_about_sheet_last(wb, "RLMS – QC (Q3)", year, current_q)
    Path(args.out).parent.mkdir(parents=True, exist_ok=True)
    wb.save(args.out)
    print(f"[DONE] {args.out}")
    return 0

if __name__ == "__main__":
    raise SystemExit(main())
